#nullable enable // autogenerated

using MVZ2.GameContent.Buffs;
using MVZ2.GameContent.Damages;
using MVZ2.Vanilla.Entities;
using PVZEngine.Buffs;
using PVZEngine.Callbacks;
using PVZEngine.Damages;
using PVZEngine.Entities;
using PVZEngine.Level;

namespace MVZ2.GameContent.Enemies
{
    [EntityBehaviourDefinition(VanillaEntityBehaviourNames.damageByGold)]
    public class DamageByGoldBehaviour : EntityBehaviourDefinition
    {
        public DamageByGoldBehaviour(string nsp, string name) : base(nsp, name)
        {
        }
        public override void Update(Entity entity)
        {
            base.Update(entity);
            DamageByGoldenGrid(entity);
        }
        public override void PreTakeDamage(DamageInput input, CallbackResult result)
        {
            base.PreTakeDamage(input, result);
            if (input.Effects.HasEffect(VanillaDamageEffects.GOLD))
            {
                input.Multiply(3);
            }
        }
        private void DamageByGoldenGrid(Entity entity)
        {
            if (!entity.IsOnGround)
                return;
            var grid = entity.GetGrid();
            if (grid == null || !grid.HasBuff(VanillaBuffID.Grid.goldenGrid))
                return;
            var effects = new DamageEffectList(VanillaDamageEffects.GOLD, VanillaDamageEffects.MUTE);
            entity.TakeDamageSourced(GOLDEN_GRID_DAMAGE, effects, new GridSourceReference(grid));
        }
        public const float GOLDEN_GRID_DAMAGE = 1;
    }
}