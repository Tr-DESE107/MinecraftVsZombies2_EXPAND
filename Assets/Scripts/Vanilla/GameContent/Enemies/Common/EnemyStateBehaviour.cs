#nullable enable // autogenerated

using MVZ2.Vanilla.Entities;
using PVZEngine.Entities;
using PVZEngine.Level;

namespace MVZ2.Vanilla.Enemies
{
    [EntityBehaviourDefinition(VanillaEntityBehaviourNames.enemyState)]
    public class EnemyStateBehaviour : EnemyBehaviour
    {
        public EnemyStateBehaviour(string nsp, string name) : base(nsp, name)
        {
        }

        protected override void UpdateAI(Entity entity)
        {
            base.UpdateAI(entity);
            entity.State = GetActionState(entity);
            entity.SetAnimationInt("State", entity.State);
        }
        private int GetActionState(Entity enemy)
        {
            if (enemy.IsDead)
            {
                return VanillaEntityStates.DEAD;
            }
            else if (enemy.IsPreviewEnemy())
            {
                return VanillaEntityStates.IDLE;
            }
            else
            {
                var over = enemy.GetStateOverride();
                if (over >= 0)
                {
                    return over;
                }
                return GetActiveState(enemy);
            }
        }
        protected virtual int GetActiveState(Entity enemy)
        {
            if (EnemyMeleeBehaviour.HasMeleeTarget(enemy))
            {
                return VanillaEntityStates.ATTACK;
            }
            else if (enemy.IsCasting())
            {
                return VanillaEntityStates.ENEMY_CAST;
            }
            else
            {
                return VanillaEntityStates.WALK;
            }
        }
    }
}