#nullable enable // autogenerated

using MVZ2.Vanilla.Enemies;
using MVZ2.Vanilla.Entities;
using PVZEngine.Entities;
using PVZEngine.Level;

namespace MVZ2.GameContent.Enemies
{
    [EntityBehaviourDefinition(VanillaEntityBehaviourNames.wickedHermitZombie_State)]
    public class WickedHermitZombie_StateBehaviour : EnemyStateBehaviour
    {
        public WickedHermitZombie_StateBehaviour(string nsp, string name) : base(nsp, name)
        {
        }
        protected override int GetActiveState(Entity enemy)
        {
            var state = base.GetActiveState(enemy);
            if (state == STATE_WALK)
            {
                if (!WickedHermitZombie.IsWarpped(enemy))
                {
                    var talismanID = WickedHermitZombie.GetTalismanZombie(enemy);
                    var talisman = talismanID?.GetEntity(enemy.Level);
                    if (talisman != null)
                    {
                        bool tooClose;
                        if (enemy.IsFacingLeft())
                        {
                            tooClose = talisman.Position.x > enemy.Position.x - WickedHermitZombie.TALISMAN_DISTANCE;
                        }
                        else
                        {
                            tooClose = talisman.Position.x < enemy.Position.x + WickedHermitZombie.TALISMAN_DISTANCE;
                        }
                        if (tooClose)
                        {
                            state = STATE_IDLE;
                        }
                    }
                }
            }
            return state;
        }
    }
}
