#nullable enable // autogenerated

using MVZ2.GameContent.Contraptions;
using MVZ2.Vanilla.Detections;
using MVZ2.Vanilla.Level;
using PVZEngine.Entities;
using UnityEngine;

namespace MVZ2.GameContent.Detections
{
    public class WoodenFanDetector : Detector
    {
        public WoodenFanDetector(bool evoked)
        {
            this.evoked = evoked;
        }
        protected override Bounds GetDetectionBounds(Entity self)
        {
            var minX = VanillaLevelExt.LEVEL_LEFTMOST;
            var maxX = VanillaLevelExt.LEVEL_RIGHTMOST;
            var minY = self.Position.y - WoodenFan.AFFECT_HEIGHT;
            var maxY = self.Position.y + WoodenFan.AFFECT_HEIGHT;
            var sizeX = maxX - minX;
            var sizeY = maxY - minY;
            var sizeZ = evoked ? VanillaLevelExt.LAWN_HEIGHT : self.Level.GetGridHeight();
            var center = self.GetCenter();
            center.x = (minX + maxX) * 0.5f;
            center.y = (minY + maxY) * 0.5f;
            if (evoked)
            {
                var minZ = self.Level.GetGridBottomZ();
                var maxZ = self.Level.GetGridTopZ();
                center.z = (minZ + maxZ) * 0.5f;
            }
            return new Bounds(center, new Vector3(sizeX, sizeY, sizeZ));
        }
        private bool evoked;
    }
}
