#nullable enable // autogenerated

using MVZ2.Vanilla.Entities;
using MVZ2Logic;
using MVZ2Logic.IZombie;
using PVZEngine.Entities;

namespace MVZ2.GameContent.Commands
{
    [CommandDefinition(VanillaCommandNames.kill)]
    public class Kill : CommandDefinition
    {
        public Kill(string nsp, string name) : base(nsp, name)
        {
        }
        public override void Invoke(string[] parameters)
        {
            var game = Global.Game;
            var level = Global.Level.GetLevel();
            Entity[] entities;
            if (parameters.Length <= 0)
            {
                entities = level.FindEntities(e => e.Type == EntityTypes.ENEMY && !e.IsDead);
            }
            else if (parameters[0] == "contraption")
            {
                entities = level.FindEntities(e => e.Type == EntityTypes.PLANT && !e.IsDead);
            }
            else if (parameters[0] == "obstacle")
            {
                entities = level.FindEntities(e => e.Type == EntityTypes.OBSTACLE && !e.IsDead);
            }
            else if (parameters[0] == "boss")
            {
                entities = level.FindEntities(e => e.Type == EntityTypes.BOSS && !e.IsDead);
            }
            else if (parameters[0] == "all")
            {
                entities = level.FindEntities(e => e.IsVulnerableEntity() && !e.IsDead);
            }
            else
            {
                entities = level.FindEntities(e => e.Type == EntityTypes.ENEMY && !e.IsDead);
            }
            foreach (var enemy in entities)
            {
                enemy.Die();
            }
        }
    }
}