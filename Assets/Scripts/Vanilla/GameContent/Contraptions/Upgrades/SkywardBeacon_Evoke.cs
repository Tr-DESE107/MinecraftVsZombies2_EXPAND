#nullable enable // autogenerated

using MVZ2.GameContent.Effects;
using MVZ2.Vanilla.Audios;
using MVZ2.Vanilla.Entities;
using MVZ2.Vanilla.Level;
using PVZEngine.Entities;
using PVZEngine.Level;
using UnityEngine;

namespace MVZ2.GameContent.Contraptions
{
    [EntityBehaviourDefinition(VanillaEntityBehaviourNames.skywardBeacon_Evoke)]
    public class SkywardBeacon_Evoke : ContraptionEvokeBehaviour
    {
        public SkywardBeacon_Evoke(string nsp, string name) : base(nsp, name)
        {
        }
        public override void Evoke(Entity entity)
        {
            base.Evoke(entity);

            var sky = entity.Level.FindFirstEntity(e => e.IsEntityOf(VanillaEffectID.skywardSky));
            if (sky == null)
            {
                var pos = new Vector3((VanillaLevelExt.LEFT_BORDER + VanillaLevelExt.RIGHT_BORDER) * 0.5f, 0, VanillaLevelExt.LAWN_HEIGHT * 0.5f);
                entity.Spawn(VanillaEffectID.skywardSky, pos);
            }
            else
            {
                sky.Timeout = sky.GetMaxTimeout();
            }
            entity.PlaySound(VanillaSoundID.sparkle);
        }
    }
}