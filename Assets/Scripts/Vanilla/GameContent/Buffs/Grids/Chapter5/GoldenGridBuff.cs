#nullable enable // autogenerated

using MVZ2.GameContent.Grids;
using MVZ2.GameContent.Models;
using MVZ2.GameContent.Sprites;
using MVZ2.Vanilla.Grids;
using MVZ2.Vanilla.Models;
using MVZ2Logic;
using MVZ2Logic.Models;
using PVZEngine;
using PVZEngine.Buffs;
using PVZEngine.Grids;
using PVZEngine.Level;
using PVZEngine.Modifiers;

namespace MVZ2.GameContent.Buffs.Grids
{
    [BuffDefinition(VanillaBuffNames.Grid.goldenGrid)]
    public class GoldenGridBuff : BuffDefinition
    {
        public GoldenGridBuff(string nsp, string name) : base(nsp, name)
        {
            AddModifier(new BooleanModifier(VanillaGridProps.DISABLED, true));
            AddModelInsertion(LogicModelHelper.ANCHOR_CENTER, MODEL_KEY, VanillaModelID.goldenGrid);
        }
        public override void PostAdd(Buff buff)
        {
            base.PostAdd(buff);
            UpdateGridSprite(buff);
        }
        public void UpdateModel(Buff buff)
        {
            UpdateGridSprite(buff);
        }
        public void UpdateGridSprite(Buff buff)
        {
            var grid = buff.Target as LawnGrid;
            if (grid == null)
                return;
            var sprite = EvaluateGridSprite(grid);
            SetGridSprite(buff, sprite);
        }
        public SpriteReference EvaluateGridSprite(LawnGrid grid)
        {
            if (grid.Definition.GetID() == VanillaGridID.woodSlope)
            {
                return VanillaSprites.goldenGridSlope;
            }

            if (grid.IsWater())
            {
                return VanillaSprites.goldenGridWater;
            }
            if (grid.IsCloud())
            {
                return VanillaSprites.goldenGridCloud;
            }
            return VanillaSprites.goldenGrid;
        }
        public void SetGridSprite(Buff buff, SpriteReference sprite)
        {
            var model = buff.GetInsertedModel(MODEL_KEY);
            if (model != null)
            {
                model.SetModelProperty("GridSprite", sprite);
            }
        }
        public static readonly NamespaceID MODEL_KEY = VanillaModelKeys.goldenGrid;
    }
}
