#nullable enable // autogenerated

using MVZ2.GameContent.Models;
using MVZ2.Vanilla.Callbacks;
using MVZ2.Vanilla.Models;
using MVZ2.Vanilla.Modifiers;
using MVZ2Logic.Models;
using PVZEngine;
using PVZEngine.Buffs;
using PVZEngine.Callbacks;
using PVZEngine.Level;
using UnityEngine;

namespace MVZ2.GameContent.Buffs
{
    [BuffDefinition(VanillaBuffNames.Entity.dragonTooth)]
    public class DragonToothBuff : BuffDefinition
    {
        public DragonToothBuff(string nsp, string name) : base(nsp, name)
        {
            AddModelInsertion(LogicModelHelper.ANCHOR_CENTER, modelKey, VanillaModelID.vulnerable);
            AddTrigger(VanillaLevelCallbacks.PRE_ENTITY_TAKE_DAMAGE, PreEntityTakeDamageCallback, priority: VanillaCallbackPriorities.MULTIPLY);
        }
        private void PreEntityTakeDamageCallback(VanillaLevelCallbacks.PreTakeDamageParams param, CallbackResult result)
        {
            var input = param.input;
            var entity = input.Entity;
            var buffCount = entity.GetBuffCount(this);
            if (buffCount > 0)
            {
                input.Multiply(Mathf.Pow(DAMAGE_MULTIPLIER, buffCount));
            }
        }
        public const float DAMAGE_MULTIPLIER = 2;
        public static readonly NamespaceID modelKey = VanillaModelKeys.vulnerable;
    }
}
