#nullable enable // autogenerated

using MVZ2.Vanilla.Entities;
using PVZEngine;
using PVZEngine.Entities;
using PVZEngine.Level;
using UnityEngine;

namespace MVZ2.GameContent.Effects
{
    [EntityBehaviourDefinition(VanillaEffectNames.explosion)]
    public class Explosion : EffectBehaviour
    {

        #region 公有方法
        public Explosion(string nsp, string name) : base(nsp, name)
        {
        }
        public override void Init(Entity entity)
        {
            base.Init(entity);
            entity.SetModelProperty("Size", entity.GetScaledSize());
        }
        public override void Update(Entity entity)
        {
            base.Update(entity);
            entity.SetModelProperty("Size", entity.GetScaledSize());
        }
        public static Entity? Spawn(NamespaceID id, Entity spawner, Vector3 position, Vector3 size)
        {
            var param = spawner.GetSpawnParams();
            param.SetProperty(EngineEntityProps.SIZE, size);
            return spawner.Spawn(id, position, param);
        }
        public static Entity? Spawn(Entity spawner, Vector3 position, Vector3 size)
        {
            return Spawn(VanillaEffectID.explosion, spawner, position, size);
        }
        public static Entity? Spawn(Entity spawner, Vector3 position, float radius)
        {
            return Spawn(spawner, position, Vector3.one * (radius * 2));
        }
        public static Entity? Spawn(NamespaceID id, LevelEngine level, Vector3 position, Vector3 size)
        {
            var param = new SpawnParams();
            param.SetProperty(EngineEntityProps.SIZE, size);
            return level.Spawn(id, position, null, param);
        }
        public static Entity? Spawn(LevelEngine level, Vector3 position, Vector3 size)
        {
            return Spawn(VanillaEffectID.explosion, level, position, size);
        }
        public static Entity? Spawn(LevelEngine level, Vector3 position, float radius)
        {
            return Spawn(level, position, Vector3.one * (radius * 2));
        }
        #endregion
    }
}