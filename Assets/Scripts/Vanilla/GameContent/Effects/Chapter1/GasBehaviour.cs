#nullable enable // autogenerated

using MVZ2.Vanilla.Audios;
using MVZ2.Vanilla.Entities;
using MVZ2.Vanilla.Properties;
using MVZ2Logic.Level;
using PVZEngine;
using PVZEngine.Entities;
using PVZEngine.Level;
using UnityEngine;

namespace MVZ2.GameContent.Effects
{
    [EntityBehaviourDefinition(VanillaEntityBehaviourNames.gas)]
    public class GasBehaviour : EffectBehaviour
    {
        public GasBehaviour(string nsp, string name) : base(nsp, name)
        {
        }
        public override void Init(Entity entity)
        {
            base.Init(entity);
            entity.Level.AddLoopSoundEntity(VanillaSoundID.poisonGas, entity.ID);
        }
        public override void Update(Entity entity)
        {
            base.Update(entity);
            entity.SetModelProperty("Size", entity.GetScaledSize());
            entity.SetModelProperty("Stopped", IsDisappearing(entity));
        }
        public static bool IsDisappearing(Entity entity)
        {
            return entity.Timeout <= GetDisappearTimeoutTicks(entity);
        }
        public static void Disappear(Entity entity)
        {
            entity.Timeout = Mathf.Min(entity.Timeout, GetDisappearTimeoutTicks(entity));
        }
        public static int GetDisappearTimeoutTicks(Entity entity) => Ticks.FromSeconds(GetDisappearTimeoutSeconds(entity));
        public static float GetDisappearTimeoutSeconds(Entity entity) => entity.GetProperty<float>(PROP_DISAPPEAR_TIMEOUT);
        public static void SetDisappearTimeoutSeconds(Entity entity, float value) => entity.SetProperty(PROP_DISAPPEAR_TIMEOUT, value);

        private static readonly VanillaEntityPropertyMeta<float> PROP_DISAPPEAR_TIMEOUT = new VanillaEntityPropertyMeta<float>("disappear_timeout", 1f);
    }
}