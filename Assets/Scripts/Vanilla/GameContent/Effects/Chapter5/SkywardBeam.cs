#nullable enable // autogenerated

using System.Collections.Generic;
using MVZ2.Vanilla.Audios;
using MVZ2.Vanilla.Entities;
using PVZEngine.Damages;
using PVZEngine.Entities;
using PVZEngine.Level;

namespace MVZ2.GameContent.Effects
{
    [EntityBehaviourDefinition(VanillaEffectNames.skywardBeam)]
    public class SkywardBeam : EffectBehaviour
    {
        public SkywardBeam(string nsp, string name) : base(nsp, name)
        {
        }
        public override void Init(Entity entity)
        {
            base.Init(entity);
            entity.CollisionMaskHostile |= EntityCollisionHelper.MASK_VULNERABLE;
            targetBuffer.Clear();
            entity.Level.OverlapBoxNonAlloc(entity.GetCenter(), entity.GetScaledSize(), entity.GetFaction(), EntityCollisionHelper.MASK_VULNERABLE, 0, targetBuffer);
            var damage = entity.GetDamage();
            var effectList = new DamageEffectList();
            foreach (var collider in targetBuffer)
            {
                collider.TakeDamage(damage, effectList, entity);
            }
            entity.PlaySound(VanillaSoundID.lightbeam);
        }
        private List<IEntityCollider> targetBuffer = new List<IEntityCollider>();
    }
}