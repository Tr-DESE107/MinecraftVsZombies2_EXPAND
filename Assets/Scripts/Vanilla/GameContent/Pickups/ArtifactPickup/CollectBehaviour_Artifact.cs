#nullable enable // autogenerated

using MVZ2.GameContent.Artifacts;
using MVZ2.GameContent.Effects;
using MVZ2.Vanilla;
using MVZ2.Vanilla.Entities;
using MVZ2Logic;
using MVZ2Logic.Level;
using PVZEngine.Entities;
using PVZEngine.Level;

namespace MVZ2.GameContent.Pickups
{
    [EntityBehaviourDefinition(VanillaEntityBehaviourNames.pickupCollectArtifact)]
    public class CollectBehaviour_Artifact : CollectBehaviour
    {
        public CollectBehaviour_Artifact(string nsp, string name) : base(nsp, name)
        {
        }
        public override bool CanCollect(Entity pickup)
        {
            return true;
        }
        public override void PostCollect(Entity pickup)
        {
            base.PostCollect(pickup);
            var level = pickup.Level;
            var artifactID = pickup.GetPickupContentID();
            var saves = Global.Saves;
            if (artifactID != null && !saves.IsArtifactUnlocked(artifactID))
            {
                var unlockID = VanillaArtifactID.GetUnlockID(artifactID);
                saves.Unlock(unlockID);
                saves.SaveToFile(); // �����Ʒ�󱣴���Ϸ��
                level.ShowAdvice(VanillaStrings.CONTEXT_ADVICE, VanillaStrings.ADVICE_YOU_FOUND_A_NEW_ARTIFACT, 0, 150);
            }
            level.PlaySound(pickup.GetCollectSound());
            level.Spawn(VanillaEffectID.starParticles, pickup.Position, pickup);
            pickup.Remove();
        }
    }
}