#nullable enable // autogenerated

using System.Collections.Generic;
using PVZEngine.Level;
using PVZEngine.Modifiers;

namespace PVZEngine.Grids
{
    public partial class LawnGrid
    {
        #region 属性
        public T? GetProperty<T>(PropertyKey<T> name, bool ignoreBuffs = false)
        {
            return properties.GetProperty<T>(name, ignoreBuffs);
        }
        public void SetProperty<T>(PropertyKey<T> name, T value)
        {
            properties.SetProperty(name, value);
        }
        public void SetPropertyObject(IPropertyKey name, object value)
        {
            properties.SetPropertyObject(name, value);
        }
        #endregion

        #region IPropertyModifyTarget实现
        bool IPropertyModifyTarget.GetFallbackProperty(IPropertyKey name, out object? value)
        {
            if (Definition == null)
            {
                value = default;
                return false;
            }
            return Definition.TryGetPropertyObject(name, out value);
        }
        IEnumerable<IPropertyKey> IPropertyModifyTarget.GetModifiedProperties()
        {
            return buffs.GetModifierPropertyNames();
        }
        PropertyModifier[]? IPropertyModifyTarget.GetModifiersUsingProperty(IPropertyKey name)
        {
            return null;
        }
        void IPropertyModifyTarget.GetModifierItems(IPropertyKey name, List<ModifierContainerItem> results)
        {
            buffs.GetModifierItems(name, results);
        }
        void IPropertyModifyTarget.OnPropertyChanged(IPropertyKey name, object? beforeValue, object? afterValue, bool triggersEvaluation)
        {
        }
        #endregion

        #region 属性
        private PropertyBlock properties;
        #endregion 属性
    }
}