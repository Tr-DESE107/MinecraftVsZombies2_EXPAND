#nullable enable // autogenerated

using System.Collections.Generic;
using PVZEngine.Auras;
using PVZEngine.Base;
using PVZEngine.Definitions;
using PVZEngine.Entities;

namespace PVZEngine.Grids
{
    public class GridDefinition : Definition
    {
        public GridDefinition(string nsp, string name) : base(nsp, name)
        {
        }
        public virtual NamespaceID? GetPlaceSound(Entity entity)
        {
            return null;
        }
        public int GetAuraCount()
        {
            return auraDefinitions.Count;
        }
        public AuraEffectDefinition GetAuraAt(int index)
        {
            return auraDefinitions[index];
        }
        protected void AddAura(AuraEffectDefinition aura)
        {
            auraDefinitions.Add(aura);
        }
        public sealed override string GetDefinitionType() => EngineDefinitionTypes.GRID;
        private List<AuraEffectDefinition> auraDefinitions = new List<AuraEffectDefinition>();
    }
}
