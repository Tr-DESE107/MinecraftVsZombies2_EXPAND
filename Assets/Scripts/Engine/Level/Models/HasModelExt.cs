#nullable enable // autogenerated

using PVZEngine;
using PVZEngine.Models;
using UnityEngine;

public static class HasModelExt
{
    public static void SetModelProperty(this IHasModel self, string name, object? value)
    {
        self.GetModelInterface()?.SetModelProperty(name, value);
    }
    public static void TriggerModel(this IHasModel self, string name)
    {
        self.GetModelInterface()?.TriggerModel(name);
    }
    public static void SetShaderInt(this IHasModel self, string name, int value)
    {
        self.GetModelInterface()?.SetShaderInt(name, value);
    }
    public static void SetShaderFloat(this IHasModel self, string name, float value)
    {
        self.GetModelInterface()?.SetShaderFloat(name, value);
    }
    public static void SetShaderColor(this IHasModel self, string name, Color32 value)
    {
        self.GetModelInterface()?.SetShaderColor(name, value);
    }
    public static void SetTint(this IModelInterface self, Color value)
    {
        self.SetShaderColor("_Color", value);
    }
    public static void SetColorOffset(this IModelInterface self, Color value)
    {
        self.SetShaderColor("_ColorOffset", value);
    }
    public static void SetHSVOffset(this IModelInterface self, Vector3 hsv)
    {
        self.SetShaderVector("_HSVOffset", hsv);
    }
    public static IModelInterface? CreateChildModel(this IHasModel self, string anchorName, NamespaceID key, NamespaceID modelID)
    {
        return self.GetModelInterface()?.CreateChildModel(anchorName, key, modelID);
    }
    public static bool RemoveChildModel(this IHasModel self, NamespaceID key)
    {
        return self.GetModelInterface()?.RemoveChildModel(key) ?? false;
    }
    public static IModelInterface? GetChildModel(this IHasModel self, NamespaceID key)
    {
        return self.GetModelInterface()?.GetChildModel(key);
    }
    public static void UpdateModel(this IHasModel self)
    {
        self.GetModelInterface()?.UpdateModel();
    }
    public static void TriggerAnimation(this IHasModel self, string name)
    {
        self.GetModelInterface()?.TriggerAnimation(name);
    }
    public static void SetAnimationBool(this IHasModel self, string name, bool value)
    {
        self.GetModelInterface()?.SetAnimationBool(name, value);
    }
    public static void SetAnimationInt(this IHasModel self, string name, int value)
    {
        self.GetModelInterface()?.SetAnimationInt(name, value);
    }
    public static void SetAnimationFloat(this IHasModel self, string name, float value)
    {
        self.GetModelInterface()?.SetAnimationFloat(name, value);
    }
    public static IAnimatorInterface? GetAnimatorInterface(this IHasModel self, string name)
    {
        return self.GetModelInterface()?.GetAnimatorInterface(name);
    }
}