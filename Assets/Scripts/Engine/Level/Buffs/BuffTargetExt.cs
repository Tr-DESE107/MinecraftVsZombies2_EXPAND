#nullable enable // autogenerated

using System.Collections.Generic;

namespace PVZEngine.Buffs
{
    public static class BuffTargetExt
    {
        public static Buff NewBuff<T>(this IBuffTarget target) where T : BuffDefinition
        {
            return target.GetLevel().CreateBuff<T>(target.Buffs.AllocBuffID());
        }
        public static Buff NewBuff(this IBuffTarget target, BuffDefinition buffDef)
        {
            return target.GetLevel().CreateBuff(buffDef, target.Buffs.AllocBuffID());
        }
        public static Buff NewBuff(this IBuffTarget target, NamespaceID id)
        {
            return target.GetLevel().CreateBuff(id, target.Buffs.AllocBuffID());
        }
        public static bool AddBuff(this IBuffTarget target, Buff buff)
        {
            return target.Buffs.AddBuff(buff, target);
        }
        public static Buff AddBuff<T>(this IBuffTarget target) where T : BuffDefinition
        {
            var buff = target.NewBuff<T>();
            target.AddBuff(buff);
            return buff;
        }
        public static Buff AddBuff(this IBuffTarget target, BuffDefinition definition)
        {
            var buff = target.NewBuff(definition);
            target.AddBuff(buff);
            return buff;
        }
        public static Buff AddBuff(this IBuffTarget target, NamespaceID id)
        {
            var buff = target.NewBuff(id);
            target.AddBuff(buff);
            return buff;
        }
        public static bool RemoveBuff(this IBuffTarget target, Buff buff) => target.Buffs.RemoveBuff(buff);
        public static int RemoveBuffs(this IBuffTarget target, IEnumerable<Buff> buffs) => target.Buffs.RemoveBuffs(buffs);
        public static int RemoveBuffs<T>(this IBuffTarget target) where T : BuffDefinition => target.Buffs.RemoveBuffs<T>();
        public static int RemoveBuffs(this IBuffTarget target, BuffDefinition definition) => target.Buffs.RemoveBuffs(definition);
        public static int RemoveBuffs(this IBuffTarget target, NamespaceID id) => target.Buffs.RemoveBuffs(id);

        public static bool HasBuff<T>(this IBuffTarget target) where T : BuffDefinition => target.Buffs.HasBuff<T>();
        public static bool HasBuff(this IBuffTarget target, BuffDefinition buff) => target.Buffs.HasBuff(buff);
        public static bool HasBuff(this IBuffTarget target, NamespaceID id) => target.Buffs.HasBuff(id);
        public static bool HasBuff(this IBuffTarget target, Buff buff) => target.Buffs.HasBuff(buff);
        public static Buff? GetFirstBuff<T>(this IBuffTarget target) where T : BuffDefinition => target.Buffs.GetFirstBuff<T>();
        public static Buff? GetFirstBuff(this IBuffTarget target, BuffDefinition definition) => target.Buffs.GetFirstBuff(definition);
        public static Buff? GetFirstBuff(this IBuffTarget target, NamespaceID id) => target.Buffs.GetFirstBuff(id);
        public static Buff[] GetBuffs<T>(this IBuffTarget target) where T : BuffDefinition => target.Buffs.GetBuffs<T>();
        public static Buff[] GetBuffs(this IBuffTarget target, BuffDefinition definition) => target.Buffs.GetBuffs(definition);
        public static void GetBuffs<T>(this IBuffTarget target, List<Buff> results) where T : BuffDefinition => target.Buffs.GetBuffsNonAlloc<T>(results);
        public static Buff? GetBuff(this IBuffTarget target, long id) => target.Buffs.GetBuff(id);
        public static void GetAllBuffs(this IBuffTarget target, List<Buff> results) => target.Buffs.GetAllBuffs(results);
    }
}