#nullable enable // autogenerated

using System.Collections.Generic;

namespace PVZEngine.Buffs
{
    public interface IBuffList
    {
        long AllocBuffID();

        bool AddBuff(Buff buff, IBuffTarget target);

        bool RemoveBuff(Buff buff);

        int RemoveBuffs(IEnumerable<Buff> buffs);
        int RemoveBuffs<T>() where T : BuffDefinition;
        int RemoveBuffs(BuffDefinition definition);
        int RemoveBuffs(NamespaceID id);

        bool HasBuff<T>() where T : BuffDefinition;
        bool HasBuff(BuffDefinition buff);
        bool HasBuff(NamespaceID id);
        bool HasBuff(Buff buff);

        Buff? GetFirstBuff<T>() where T : BuffDefinition;
        Buff? GetFirstBuff(BuffDefinition definition);
        Buff? GetFirstBuff(NamespaceID id);

        Buff[] GetBuffs<T>() where T : BuffDefinition;
        Buff[] GetBuffs(NamespaceID id);
        Buff[] GetBuffs(BuffDefinition definition);

        int GetBuffCount<T>() where T : BuffDefinition;
        int GetBuffCount(NamespaceID id);
        int GetBuffCount(BuffDefinition definition);
        void GetBuffsNonAlloc<T>(List<Buff> results) where T : BuffDefinition;

        Buff? GetBuff(long id);

        void GetAllBuffs(List<Buff> results);

        ModelInsertion[] GetModelInsertions();
    }
}
