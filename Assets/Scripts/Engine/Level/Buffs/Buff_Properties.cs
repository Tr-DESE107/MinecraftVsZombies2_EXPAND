#nullable enable // autogenerated

using System;

namespace PVZEngine.Buffs
{
    public partial class Buff
    {
        public T? GetProperty<T>(PropertyKey<T> name)
        {
            return propertyDict.GetProperty<T>(name);
        }
        public void SetProperty<T>(PropertyKey<T> name, T? value)
        {
            if (propertyDict.SetProperty<T>(name, value))
            {
                // 增益属性更改时，如果有利用该增益属性修改属性的修改器，调用一次属性更改时事件。
                foreach (var modifier in GetModifiers())
                {
                    if (name.Equals(modifier.UsingContainerPropertyName))
                    {
                        CallPropertyChanged(modifier.PropertyName);
                    }
                }
            }
        }
        private void WritePropertiesToSerializable(SerializableBuff seri)
        {
            seri.propertyDict = propertyDict.ToSerializable();
        }
        private void InitPropertiesFromSerializable(SerializableBuff seri)
        {
            propertyDict = PropertyDictionary.FromSerializable(seri.propertyDict);
        }
        private void CallPropertyChanged(IPropertyKey name)
        {
            OnPropertyChanged?.Invoke(name);
        }
        public event Action<IPropertyKey>? OnPropertyChanged;

        private PropertyDictionary propertyDict = new PropertyDictionary();
    }
}
