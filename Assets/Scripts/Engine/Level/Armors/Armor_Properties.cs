#nullable enable // autogenerated

using System.Collections.Generic;
using PVZEngine.Level;
using PVZEngine.Modifiers;
using Tools;
using UnityEngine;

namespace PVZEngine.Armors
{
    public partial class Armor
    {
        #region 属性
        public T? GetProperty<T>(PropertyKey<T> name, bool ignoreBuffs = false)
        {
            return properties.GetProperty<T>(name, ignoreBuffs);
        }
        public void SetProperty<T>(PropertyKey<T> name, T? value)
        {
            properties.SetProperty(name, value);
        }
        private void UpdateAllBuffedProperties(bool triggersEvaluation)
        {
            properties.UpdateAllModifiedProperties(triggersEvaluation);
        }
        bool IPropertyModifyTarget.GetFallbackProperty(IPropertyKey name, out object? value)
        {
            if (Definition != null)
            {
                if (Definition.TryGetPropertyObject(name, out var prop))
                {
                    value = prop;
                    return true;
                }
            }
            value = default;
            return false;
        }

        void IPropertyModifyTarget.GetModifierItems(IPropertyKey name, List<ModifierContainerItem> results)
        {
            buffs.GetModifierItems(name, results);
        }
        void IPropertyModifyTarget.OnPropertyChanged(IPropertyKey name, object? beforeValue, object? afterValue, bool triggersEvaluation)
        {
            if (triggersEvaluation)
            {
                if (EngineArmorProps.MAX_HEALTH.Equals(name))
                {
                    var before = beforeValue.ToGeneric<float>();
                    var after = afterValue.ToGeneric<float>();
                    Health = Mathf.Min(after, Health * (after / before));
                }
            }
        }
        PropertyModifier[]? IPropertyModifyTarget.GetModifiersUsingProperty(IPropertyKey name)
        {
            return null;
        }
        IEnumerable<IPropertyKey> IPropertyModifyTarget.GetModifiedProperties()
        {
            return buffs.GetModifierPropertyNames();
        }
        #endregion

        public void WritePropertiesToSerializable(SerializableArmor seri)
        {
            seri.properties = properties.ToSerializable();
        }
        public void InitPropertiesFromSerializable(SerializableArmor seri)
        {
            properties = PropertyBlock.FromSerializable(seri.properties, this);
        }

        #region 属性字段
        private PropertyBlock properties;
        #endregion
    }
}