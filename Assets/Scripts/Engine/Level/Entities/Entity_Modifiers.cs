#nullable enable // autogenerated

using System.Collections.Generic;
using PVZEngine.Modifiers;

namespace PVZEngine.Entities
{
    public sealed partial class Entity
    {
        #region 增益属性
        private void UpdateModifierCaches()
        {
            foreach (var modifier in Definition.GetModifiers())
            {
                var propName = modifier.PropertyName;
                if (!modifierCaches.TryGetValue(propName, out var list))
                {
                    list = new List<ModifierContainerItem>();
                    modifierCaches.Add(propName, list);
                }
                list.Add(new ModifierContainerItem(this, modifier));
            }
        }
        T? IModifierContainer.GetProperty<T>(PropertyKey<T> name) where T : default => GetProperty<T>(name);
        #endregion

        #region 属性字段
        private Dictionary<IPropertyKey, List<ModifierContainerItem>> modifierCaches = new Dictionary<IPropertyKey, List<ModifierContainerItem>>(new PropertyKeyComparer());
        #endregion
    }
}