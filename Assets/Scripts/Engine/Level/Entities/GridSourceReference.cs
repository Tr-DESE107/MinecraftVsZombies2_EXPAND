#nullable enable // autogenerated

using PVZEngine.Grids;
using PVZEngine.Level;

namespace PVZEngine.Entities
{
    public class GridSourceReference : ILevelSourceReference
    {
        private GridSourceReference(int index, NamespaceID defID)
        {
            this.index = index;
            this.definitionID = defID;
        }
        public GridSourceReference(LawnGrid grid)
        {
            index = grid.GetIndex();
            definitionID = grid.Definition.GetID();
        }
        public GridSourceReference Clone()
        {
            return new GridSourceReference(index, definitionID);
        }
        public Entity? GetEntity(LevelEngine game) => null;
        public override bool Equals(object obj)
        {
            if (obj is GridSourceReference entityRef)
            {
                return ID == entityRef.ID;
            }
            return base.Equals(obj);
        }
        public override int GetHashCode()
        {
            return ID.GetHashCode();
        }
        public static bool operator ==(GridSourceReference lhs, GridSourceReference rhs)
        {
            if (lhs is null)
                return rhs is null;
            return lhs.Equals(rhs);
        }
        public static bool operator !=(GridSourceReference lhs, GridSourceReference rhs)
        {
            return !(lhs == rhs);
        }
        ILevelSourceReference ILevelSourceReference.Clone()
        {
            return Clone();
        }
        ILevelSourceTarget? ILevelSourceReference.GetTarget(LevelEngine level)
        {
            return level.GetGrid(index);
        }
        public int Faction => 0;
        public NamespaceID DefinitionID => definitionID;
        public long ID => index;
        ILevelSourceReference? ILevelSourceReference.Parent => null;
        private NamespaceID definitionID;
        private int index;
    }
}