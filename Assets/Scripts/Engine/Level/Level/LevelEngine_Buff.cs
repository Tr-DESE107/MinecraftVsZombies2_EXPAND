#nullable enable // autogenerated

using PVZEngine.Base;
using PVZEngine.Buffs;

namespace PVZEngine.Level
{
    public partial class LevelEngine
    {
        #region 增益
        public BuffReference GetBuffReference(Buff buff) => new BuffReferenceLevel(buff.ID);
        public Buff CreateBuff<T>(long buffID) where T : BuffDefinition
        {
            var buffDefinition = Content.GetBuffDefinition<T>();
            return CreateBuff(buffDefinition, buffID);
        }
        public Buff CreateBuff(NamespaceID id, long buffID)
        {
            var buffDefinition = Content.GetBuffDefinition(id);
            if (buffDefinition == null)
                throw new MissingDefinitionException($"Trying to create a buff with missing definition {id}");
            return CreateBuff(buffDefinition, buffID);
        }
        public Buff CreateBuff(BuffDefinition buffDef, long buffID)
        {
            return new Buff(this, buffDef, buffID);
        }
        #endregion

        #region 序列化
        private void WriteBuffsToSerializable(SerializableLevel seri)
        {
            seri.buffs = buffs.ToSerializable();
        }
        private void InitBuffsFromSerializable(SerializableLevel seri)
        {
            buffs = BuffList.CreateFromSerializable(seri.buffs, this, this);
            buffs.OnPropertyChanged += UpdateBuffedProperty;
            // 关卡拥有的所有BUFF引用计数+1
            foreach (var buff in buffs)
            {
                IncreaseLevelObjectReference(buff);
            }
        }
        private void LoadBuffsFromSerializable(SerializableLevel seri)
        {
            if (seri.buffs != null)
                buffs.LoadFromSerializable(seri.buffs);
        }
        #endregion

        #region 属性字段
        IBuffList IBuffTarget.Buffs => buffs;

        private BuffList buffs = new BuffList();
        #endregion 保存属性
    }
}