#nullable enable // autogenerated

using System;
using Tools;

namespace PVZEngine.Level
{
    public partial class LevelEngine
    {
        #region 随机数
        public RandomGenerator CreateRNG()
        {
            return new RandomGenerator(levelRandom.Next());
        }
        public RandomGenerator GetSpawnRNG()
        {
            return spawnRandom;
        }
        public RandomGenerator GetRoundRNG()
        {
            return roundRandom;
        }
        public RandomGenerator GetConveyorRNG()
        {
            return conveyorRandom;
        }
        public int NewEntitySeed()
        {
            return entityRandom.Next();
        }
        #endregion
        public void InitRandom(int seed)
        {
            Seed = seed == 0 ? Guid.NewGuid().GetHashCode() : seed;
            levelRandom = new RandomGenerator(Seed);
            entityRandom = CreateRNG();
            effectRandom = CreateRNG();
            roundRandom = CreateRNG();
            spawnRandom = CreateRNG();
            conveyorRandom = CreateRNG();

            miscRandom = CreateRNG();

        }
        public void WriteRandomToSerializable(SerializableLevel level)
        {
            level.seed = Seed;
            level.levelRandom = levelRandom.ToSerializable();
            level.entityRandom = entityRandom.ToSerializable();
            level.effectRandom = effectRandom.ToSerializable();
            level.roundRandom = roundRandom.ToSerializable();
            level.spawnRandom = spawnRandom.ToSerializable();
            level.conveyorRandom = conveyorRandom.ToSerializable();
            level.miscRandom = miscRandom.ToSerializable();
        }
        public void ReadRandomFromSerializable(SerializableLevel seri)
        {
            Seed = seri.seed;
            levelRandom = seri.levelRandom != null ? RandomGenerator.FromSerializable(seri.levelRandom) : new RandomGenerator(Seed);
            entityRandom = seri.entityRandom != null ? RandomGenerator.FromSerializable(seri.entityRandom) : new RandomGenerator(Seed);
            effectRandom = seri.effectRandom != null ? RandomGenerator.FromSerializable(seri.effectRandom) : new RandomGenerator(Seed);
            roundRandom = seri.roundRandom != null ? RandomGenerator.FromSerializable(seri.roundRandom) : new RandomGenerator(Seed);
            spawnRandom = seri.spawnRandom != null ? RandomGenerator.FromSerializable(seri.spawnRandom) : new RandomGenerator(Seed);
            conveyorRandom = seri.conveyorRandom != null ? RandomGenerator.FromSerializable(seri.conveyorRandom) : new RandomGenerator(Seed);
            miscRandom = seri.miscRandom != null ? RandomGenerator.FromSerializable(seri.miscRandom) : new RandomGenerator(Seed);
        }
        public int Seed { get; private set; }
        private RandomGenerator levelRandom = null!;

        private RandomGenerator entityRandom = null!;
        private RandomGenerator effectRandom = null!;

        private RandomGenerator roundRandom = null!;
        private RandomGenerator spawnRandom = null!;
        private RandomGenerator conveyorRandom = null!;

        private RandomGenerator miscRandom = null!;
    }
}