#nullable enable // autogenerated

using PVZEngine.Buffs;
using PVZEngine.Definitions;
using PVZEngine.Level;

namespace PVZEngine.SeedPacks
{
    public class ConveyorSeedPack : SeedPack
    {
        public ConveyorSeedPack(LevelEngine level, SeedDefinition definition, long id) : base(level, definition, id)
        {
        }
        public int GetIndex()
        {
            return Level.GetConveyorSeedPackIndex(this);
        }
        public override bool Exists()
        {
            return GetIndex() >= 0;
        }
        public override BuffReference GetBuffReference(Buff buff)
        {
            return new BuffReferenceConveyorSeedPack(ID, buff.ID);
        }
        #region 序列化
        public SerializableConveyorSeedPack ToSerializable()
        {
            var seri = new SerializableConveyorSeedPack();
            SaveToSerializable(seri);
            return seri;
        }
        public static ConveyorSeedPack? CreateFromSerializable(SerializableConveyorSeedPack seri, LevelEngine level)
        {
            var definition = level.Content.GetSeedDefinition(seri.seedID);
            if (definition == null)
                return null;
            var seedPack = new ConveyorSeedPack(level, definition, seri.id);
            seedPack.InitFromSerializable(seri);
            return seedPack;
        }
        #endregion
        public override string ToString()
        {
            return $"ConveyorSeedPack_{Definition}";
        }
    }
}
