#nullable enable // autogenerated

using System;
using System.Collections.Generic;
using PVZEngine.Auras;
using PVZEngine.Buffs;
using PVZEngine.Definitions;
using PVZEngine.Entities;
using PVZEngine.Level;
using UnityEngine;

namespace PVZEngine.SeedPacks
{
    public abstract partial class SeedPack : IPropertyModifyTarget, IAuraSource, IModeledBuffTarget
    {
        #region 构造器
        public SeedPack(LevelEngine level, SeedDefinition definition, long id)
        {
            ID = id;
            Level = level;
            Definition = definition;

            properties = new PropertyBlock(this);
            InitBuffs();
            CreateAuraEffects();
        }
        #endregion

        #region 生命周期
        public void Update(float rechargeSpeed)
        {
            OnUpdate(rechargeSpeed);
            UpdateAuras();
            UpdateBuffs();
            Definition.Update(this, rechargeSpeed);
        }
        protected virtual void OnUpdate(float rechargeSpeed)
        {

        }
        #endregion

        #region 消耗
        public int GetCost()
        {
            float cost = GetProperty<float>(EngineSeedProps.COST);
            cost = Mathf.Max(cost, 0);
            return Mathf.FloorToInt(cost);
        }
        #endregion

        #region 充能
        public RechargeDefinition? GetRechargeDefinition()
        {
            var rechargeID = this.GetRechargeID();
            if (rechargeID == null)
                return null;
            return Level.Content.GetRechargeDefinition(rechargeID);
        }
        public int GetStartMaxRecharge()
        {
            var rechargeDef = GetRechargeDefinition();
            if (rechargeDef == null)
                return 0;
            return rechargeDef.GetStartMaxRecharge();
        }
        public int GetUsedMaxRecharge()
        {
            var rechargeDef = GetRechargeDefinition();
            if (rechargeDef == null)
                return 0;
            return rechargeDef.GetMaxRecharge();
        }
        #endregion

        #region 杂项
        public NamespaceID GetDefinitionID()
        {
            return Definition.GetID();
        }
        public void ChangeDefinition(SeedDefinition definition)
        {
            Definition = definition;
            properties.ClearFallbackCaches();
            UpdateAllBuffedProperties(true);
            OnDefinitionChanged?.Invoke(definition);
        }
        public abstract bool Exists();
        #endregion

        #region 序列化
        protected void SaveToSerializable(SerializableSeedPack seri)
        {
            seri.id = ID;
            seri.seedID = Definition.GetID();
            SavePropertiesToSerializable(seri);
            SaveBuffsToSerializable(seri);
            SaveAurasToSerializable(seri);
        }
        protected void InitFromSerializable(SerializableSeedPack seri)
        {
            InitPropertiesFromSerializable(seri);
            InitBuffsFromSerializable(seri);
        }
        public void LoadFromSerializable(LevelEngine level, SerializableSeedPack seri)
        {
            LoadBuffsFromSerializable(seri);
            LoadAurasFromSerializable(seri);
            UpdateAllBuffedProperties(false);
        }
        #endregion

        #region ILevelObject接口实现
        LevelEngine ILevelObject.GetLevel() => Level;
        Entity? ILevelObject.GetEntity() => null;
        IEnumerable<ILevelObject> ILevelObject.GetChildrenObjects()
        {
            foreach (var buff in buffs)
            {
                yield return buff;
            }
        }
        void ILevelObject.OnAddToLevel(LevelEngine level)
        {
            auras.PostAdd();
        }
        void ILevelObject.OnRemoveFromLevel(LevelEngine level)
        {
            auras.PostRemove();
        }
        #endregion

        #region 事件
        public event Action<SeedDefinition>? OnDefinitionChanged;
        #endregion

        #region 属性字段
        public long ID { get; }
        public LevelEngine Level { get; private set; }
        public SeedDefinition Definition { get; private set; }
        #endregion
    }
}
