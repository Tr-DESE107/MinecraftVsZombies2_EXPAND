#nullable enable // autogenerated

using System;
using PVZEngine.Buffs;

namespace PVZEngine.SeedPacks
{
    public partial class SeedPack
    {
        private void InitBuffs()
        {
            buffs.OnPropertyChanged += UpdateBuffedProperty;
            buffs.OnBuffAdded += OnBuffAddedCallback;
            buffs.OnBuffRemoved += OnBuffRemovedCallback;
        }
        private void UpdateBuffs()
        {
            buffs.Update();
        }

        #region 事件回调
        private void OnBuffAddedCallback(Buff buff)
        {
            foreach (var insertion in buff.GetModelInsertions())
            {
                OnModelInsertionAdded?.Invoke(insertion);
            }
        }
        private void OnBuffRemovedCallback(Buff buff)
        {
            foreach (var insertion in buff.GetModelInsertions())
            {
                OnModelInsertionRemoved?.Invoke(insertion);
            }
        }
        #endregion

        #region 增益
        public abstract BuffReference GetBuffReference(Buff buff);
        #endregion

        #region 序列化
        private void SaveBuffsToSerializable(SerializableSeedPack seri)
        {
            seri.buffs = buffs.ToSerializable();
        }
        private void InitBuffsFromSerializable(SerializableSeedPack seri)
        {
            buffs = BuffList.FromSerializable(seri.buffs, Level, this);
            InitBuffs();
        }
        private void LoadBuffsFromSerializable(SerializableSeedPack seri)
        {
            if (seri.buffs != null)
                buffs.LoadAuras(seri.buffs, Level);
        }
        #endregion

        #region 事件
        public event Action<ModelInsertion>? OnModelInsertionAdded;
        public event Action<ModelInsertion>? OnModelInsertionRemoved;
        #endregion

        #region 属性字段
        BuffList IBuffTarget.Buffs => buffs;
        protected BuffList buffs = new BuffList();
        #endregion
    }
}
