#nullable enable // autogenerated

using System.Collections.Generic;
using System.Linq;

namespace PVZEngine.Modifiers
{
    public class BooleanCalculator : ModifierCalculator<bool, BooleanModifier>
    {
        public override bool CalculateGeneric(bool value, IEnumerable<ModifierContainerItem> modifiers)
        {
            if (modifiers.Count() == 0)
                return value;

            var grouped = modifiers.GroupBy(m => m.modifier?.Priority ?? 0).OrderBy(g => g.Key);
            foreach (var layerModifiers in grouped)
            {
                bool setValue = value;
                bool orValue = false;
                bool xorValue = false;
                bool andValue = true;
                bool reverse = false;
                foreach (var modi in layerModifiers)
                {
                    var buff = modi.container;
                    if (modi.modifier is not BooleanModifier modifier)
                        continue;
                    var modifierValue = modifier.GetModifierValueGeneric(buff);
                    switch (modifier.Operator)
                    {
                        case BooleanOperator.Set:
                            setValue = modifierValue;
                            break;
                        case BooleanOperator.Not:
                            reverse = !reverse;
                            break;
                        case BooleanOperator.Or:
                            orValue |= modifierValue;
                            break;
                        case BooleanOperator.Xor:
                            xorValue ^= modifierValue;
                            break;
                        case BooleanOperator.And:
                            andValue &= modifierValue;
                            break;
                    }
                }
                value = setValue;
                value |= orValue;
                value ^= xorValue;
                value &= andValue;
                if (reverse)
                {
                    value = !value;
                }
            }
            return value;
        }
    }
}
