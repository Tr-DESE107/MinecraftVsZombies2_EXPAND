#nullable enable // autogenerated

using System.Collections;
using System.Collections.Generic;

namespace PVZEngine.Base
{
    public class UpdateList<TKey> : IEnumerable<TKey>
    {
        public UpdateList()
        {

        }
        public UpdateList(IEnumerable<TKey> elements)
        {
            this.elements.AddRange(elements);
        }
        public virtual void Update(IEnumerable<TKey> validSources)
        {
            UpdateElements(validSources);
        }
        protected void UpdateElements(IEnumerable<TKey> validSources)
        {
            updater.Update(validSources, elements, AddElement, RemoveElement);
        }
        private void AddElement(TKey element)
        {
            elements.Add(element);
        }
        private void RemoveElement(TKey element)
        {
            elements.Remove(element);
        }
        public IEnumerator<TKey> GetEnumerator()
        {
            return ((IEnumerable<TKey>)elements).GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return ((IEnumerable)elements).GetEnumerator();
        }
        private ListUpdater<TKey> updater = new ListUpdater<TKey>();
        private List<TKey> elements = new List<TKey>();
    }
}
