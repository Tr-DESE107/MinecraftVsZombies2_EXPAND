#nullable enable // autogenerated

using System;
using System.Collections.Generic;

namespace PVZEngine.Base
{
    public class ListUpdater<T>
    {
        public void Update(IEnumerable<T> targets, IEnumerable<T> current, Action<T> addAction, Action<T> removeAction, Action<T>? updateAction = null)
        {
            // 清空并填充当前集合的 HashSet
            currentBuffer.Clear();
            removeBuffer.Clear();
            foreach (var item in current)
            {
                currentBuffer.Add(item);
                removeBuffer.Add(item);
            }

            // 处理目标集合
            foreach (var element in targets)
            {
                // 从待移除集合中移除当前元素（O(1) 操作）
                removeBuffer.Remove(element);

                // 如果元素不在当前集合中，则添加
                if (!currentBuffer.Contains(element)) // O(1) 查找
                {
                    addAction?.Invoke(element);
                }

                // 执行更新操作
                updateAction?.Invoke(element);
            }

            // 移除剩余元素
            foreach (var element in removeBuffer)
            {
                removeAction?.Invoke(element);
            }
        }
        private HashSet<T> currentBuffer = new HashSet<T>();
        private HashSet<T> removeBuffer = new HashSet<T>();
    }
}
