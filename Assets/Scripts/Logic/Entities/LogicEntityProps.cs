#nullable enable // autogenerated

using MVZ2Logic.Conditions;
using PVZEngine;
using PVZEngine.Entities;

namespace MVZ2Logic.Entities
{
    [PropertyRegistryRegion(PropertyRegions.entity)]
    public static class LogicEntityProps
    {
        private static PropertyMeta<T> Get<T>(string name)
        {
            return new PropertyMeta<T>(name);
        }
        #region 形状ID
        public static readonly PropertyMeta<NamespaceID> SHAPE = Get<NamespaceID>("shape");
        public static NamespaceID? GetShapeID(this EntityDefinition definition)
        {
            return definition.GetProperty<NamespaceID>(SHAPE);
        }
        public static NamespaceID? GetShapeID(this Entity entity, bool ignoreBuffs = false)
        {
            return entity.GetProperty<NamespaceID>(SHAPE, ignoreBuffs: ignoreBuffs);
        }
        public static void SetShapeID(this Entity entity, NamespaceID value)
        {
            entity.SetProperty(SHAPE, value);
        }
        #endregion

        #region 实体名称
        public static readonly PropertyMeta<string> NAME = Get<string>("name");
        public static string? GetEntityName(this EntityDefinition definition)
        {
            return definition.GetProperty<string>(NAME);
        }
        public static void SetEntityName(this EntityDefinition entity, string value)
        {
            entity.SetProperty(NAME, value);
        }
        #endregion

        #region 实体工具提示
        public static readonly PropertyMeta<string> TOOLTIP = Get<string>("tooltip");
        public static string? GetEntityTooltip(this EntityDefinition definition)
        {
            return definition.GetProperty<string>(TOOLTIP);
        }
        public static void SetEntityTooltip(this EntityDefinition entity, string value)
        {
            entity.SetProperty(TOOLTIP, value);
        }
        #endregion

        #region 死亡信息
        public static readonly PropertyMeta<string> DEATH_MESSAGE = Get<string>("death_message");
        public static string? GetDeathMessage(this EntityDefinition definition)
        {
            return definition.GetProperty<string>(DEATH_MESSAGE);
        }
        public static void SetDeathMessage(this EntityDefinition entity, string value)
        {
            entity.SetProperty(DEATH_MESSAGE, value);
        }
        #endregion

        #region 解锁
        public static readonly PropertyMeta<IConditionList> UNLOCK = Get<IConditionList>("unlock");
        public static IConditionList? GetEntityUnlock(this EntityDefinition definition)
        {
            return definition.GetProperty<IConditionList>(UNLOCK);
        }
        #endregion

        #region 解锁
        public static readonly PropertyMeta<int> PICKUP_DESTINATION = Get<int>("pickup_destination");
        public static int GetPickupDestination(this EntityDefinition definition)
        {
            return definition.GetProperty<int>(PICKUP_DESTINATION);
        }
        public static int GetPickupDestination(this Entity entity)
        {
            return entity.GetProperty<int>(PICKUP_DESTINATION);
        }
        #endregion
    }
}
