#nullable enable // autogenerated

using PVZEngine.Entities;
using PVZEngine.Grids;

namespace MVZ2Logic.HeldItems
{
    public enum HeldHighlightMode
    {
        None,
        Entity,
        Grid
    }
    public struct HeldHighlight
    {
        public HeldHighlightMode mode;
        public Entity entity;
        public HeldHighlightGrid[] grids;
        public static readonly HeldHighlight None = new HeldHighlight()
        {
            mode = HeldHighlightMode.None
        };
        public static HeldHighlight Entity(Entity entity)
        {
            return new HeldHighlight()
            {
                mode = HeldHighlightMode.Entity,
                entity = entity,
            };
        }
        public static HeldHighlight Green(LawnGrid grid, float start = 0, float end = 1)
        {
            return new HeldHighlight()
            {
                mode = HeldHighlightMode.Grid,
                grids = new HeldHighlightGrid[] { HeldHighlightGrid.Green(grid, start, end) }
            };
        }
        public static HeldHighlight Red(LawnGrid grid)
        {
            return new HeldHighlight()
            {
                mode = HeldHighlightMode.Grid,
                grids = new HeldHighlightGrid[] { HeldHighlightGrid.Red(grid) }
            };
        }
    }
    public struct HeldHighlightGrid
    {
        public LawnGrid grid;
        public bool valid;
        public float rangeStart;
        public float rangeEnd;
        public static HeldHighlightGrid Green(LawnGrid grid, float start = 0, float end = 1)
        {
            return new HeldHighlightGrid()
            {
                grid = grid,
                valid = true,
                rangeStart = start,
                rangeEnd = end,
            };
        }
        public static HeldHighlightGrid Red(LawnGrid grid)
        {
            return new HeldHighlightGrid()
            {
                grid = grid,
                valid = false,
                rangeStart = 0,
                rangeEnd = 1,
            };
        }
    }
}
