#nullable enable // autogenerated

using PVZEngine;
using PVZEngine.Base;
using UnityEngine;

namespace MVZ2Logic.SeedPacks
{
    public class ShapeDefinition : Definition
    {
        public ShapeDefinition(string nsp, string name) : base(nsp, name)
        {
        }
        public Vector3 GetArmorPosition(NamespaceID slotID, NamespaceID armorID)
        {
            if (Armors == null)
                return Vector3.zero;
            return Armors.GetArmorPosition(slotID, armorID);
        }
        public Vector3 GetArmorScale(NamespaceID slotID, NamespaceID armorID)
        {
            if (Armors == null)
                return Vector3.one;
            return Armors.GetArmorScale(slotID, armorID);
        }
        public sealed override string GetDefinitionType() => LogicDefinitionTypes.SHAPE;
        public IShapeDefinitionArmor? Armors { get; set; }
    }
    public interface IShapeDefinitionArmor
    {
        Vector3 GetArmorPosition(NamespaceID slotID, NamespaceID armorID);
        Vector3 GetArmorScale(NamespaceID slotID, NamespaceID armorID);
    }
}
