#nullable enable // autogenerated

using MVZ2Logic.Notes;
using PVZEngine;

namespace MVZ2Logic.Entities
{
    [PropertyRegistryRegion(LogicPropertyRegions.note)]
    public static class LogicNoteProps
    {
        private static PropertyMeta<T> Get<T>(string name)
        {
            return new PropertyMeta<T>(name);
        }
        #region 笔记贴图
        public static readonly PropertyMeta<SpriteReference> NOTE_SPRITE = Get<SpriteReference>("note_sprite");
        public static SpriteReference? GetNoteSprite(this NoteDefinition definition)
        {
            return definition.GetProperty<SpriteReference>(NOTE_SPRITE);
        }
        #endregion

        #region 背景贴图
        public static readonly PropertyMeta<SpriteReference> NOTE_BACKGROUND = Get<SpriteReference>("note_background");
        public static SpriteReference? GetNoteBackground(this NoteDefinition definition)
        {
            return definition.GetProperty<SpriteReference>(NOTE_BACKGROUND);
        }
        #endregion

        #region 反转贴图
        public static readonly PropertyMeta<SpriteReference> FLIP_NOTE_SPRITE = Get<SpriteReference>("flip_note_sprite");
        public static SpriteReference? GetFlipNoteSprite(this NoteDefinition definition)
        {
            return definition.GetProperty<SpriteReference>(FLIP_NOTE_SPRITE);
        }
        #endregion

        #region 可翻转
        public static readonly PropertyMeta<bool> CAN_FLIP = Get<bool>("can_flip");
        public static bool CanFlip(this NoteDefinition definition)
        {
            return definition.GetProperty<bool>(CAN_FLIP);
        }
        #endregion

        #region 开场对话
        public static readonly PropertyMeta<NamespaceID> START_TALK = Get<NamespaceID>("start_talk");
        public static NamespaceID? GetStartTalk(this NoteDefinition definition)
        {
            return definition.GetProperty<NamespaceID>(START_TALK);
        }
        #endregion
    }
}
