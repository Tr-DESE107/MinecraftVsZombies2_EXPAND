#nullable enable // autogenerated

using System;
using UnityEngine;
using UnityEngine.UI;

namespace MVZ2.Almanacs
{
    public class IndexAlmanacPage : AlmanacPage
    {
        protected override void Awake()
        {
            base.Awake();
            viewContraptionButton.onClick.AddListener(() => OnButtonClick?.Invoke(ButtonType.ViewContraption));
            viewEnemyButton.onClick.AddListener(() => OnButtonClick?.Invoke(ButtonType.ViewEnemy));
            viewArtifactButton.onClick.AddListener(() => OnButtonClick?.Invoke(ButtonType.ViewArtifact));
            viewMiscButton.onClick.AddListener(() => OnButtonClick?.Invoke(ButtonType.ViewMisc));
        }
        public void SetArtifactVisible(bool visible)
        {
            artifactRegion.SetActive(visible);
        }
        public event Action<ButtonType>? OnButtonClick;
        [SerializeField]
        private GameObject artifactRegion = null!;
        [SerializeField]
        private Button viewContraptionButton = null!;
        [SerializeField]
        private Button viewEnemyButton = null!;
        [SerializeField]
        private Button viewArtifactButton = null!;
        [SerializeField]
        private Button viewMiscButton = null!;
        public enum ButtonType
        {
            ViewContraption,
            ViewEnemy,
            ViewArtifact,
            ViewMisc
        }
    }
}
