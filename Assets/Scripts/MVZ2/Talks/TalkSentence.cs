#nullable enable // autogenerated

using System;
using System.Linq;
using System.Xml;
using MVZ2.IO;
using MVZ2.Managers;
using PVZEngine;

namespace MVZ2.TalkData
{
    public class TalkSentence
    {
        public string text;
        public string? description;
        public NamespaceID? speaker;
        public string? speakerName;
        public NamespaceID[] sounds;
        public NamespaceID? variant;
        public TalkScript[] startScripts;
        public TalkScript[] clickScripts;

        private TalkSentence(string text, NamespaceID[] sounds, TalkScript[] startScripts, TalkScript[] clickScripts)
        {
            this.text = text;
            this.sounds = sounds;
            this.startScripts = startScripts;
            this.clickScripts = clickScripts;
        }

        public XmlNode ToXmlNode(XmlDocument document)
        {
            XmlNode node = document.CreateElement("sentence");
            var textNode = document.CreateTextNode(text);
            node.AppendChild(textNode);
            if (NamespaceID.IsValid(speaker))
                node.CreateAttribute("speaker", speaker.ToString());
            if (!string.IsNullOrEmpty(speakerName))
                node.CreateAttribute("speakerName", speakerName);
            if (!string.IsNullOrEmpty(description))
                node.CreateAttribute("description", description);
            if (sounds.Length > 0)
                node.CreateAttribute("sounds", string.Join(";", sounds.Select(s => s.ToString())));
            if (NamespaceID.IsValid(variant))
                node.CreateAttribute("variant", variant.ToString());
            if (startScripts.Length > 0)
                node.CreateAttribute("onStart", string.Join(";", startScripts.Where(s => s != null).Select(s => s.ToString())));
            if (clickScripts.Length > 0)
                node.CreateAttribute("onClick", string.Join(";", clickScripts.Where(s => s != null).Select(s => s.ToString())));
            return node;
        }
        public static TalkSentence FromXmlNode(XmlNode node, string defaultNsp)
        {
            var speaker = node.GetAttributeNamespaceID("speaker", defaultNsp);
            var speakerName = node.GetAttribute("speakerName");
            var description = node.GetAttribute("description");
            var sounds = node.GetAttributeNamespaceIDArray("sounds", defaultNsp);
            var variant = node.GetAttributeNamespaceID("variant", defaultNsp);
            string text;
            TalkScript[]? startScripts = null;
            TalkScript[]? clickScripts = null;
            var textNode = node["text"];
            if (textNode != null)
            {
                text = textNode.InnerText;
                var startScriptNode = node["start"];
                if (startScriptNode != null)
                {
                    startScripts = TalkScript.FromArrayXmlNode(startScriptNode);
                }
                var clickScriptNode = node["click"];
                if (clickScriptNode != null)
                {
                    clickScripts = TalkScript.FromArrayXmlNode(clickScriptNode);
                }
            }
            else
            {
                text = node.InnerText;
                var startScriptStr = node.GetAttribute("onStart");
                if (!string.IsNullOrEmpty(startScriptStr))
                {
                    startScripts = TalkScript.ParseArray(startScriptStr);
                }
                var clickScriptStr = node.GetAttribute("onClick");
                if (!string.IsNullOrEmpty(clickScriptStr))
                {
                    clickScripts = TalkScript.ParseArray(clickScriptStr);
                }
            }

            return new TalkSentence(text, sounds ?? Array.Empty<NamespaceID>(), startScripts ?? GetDefaultStartScripts(), clickScripts ?? GetDefaultClickScripts())
            {
                speaker = speaker,
                speakerName = speakerName,
                description = description,
                variant = variant,
            };
        }
        public string GetSpeakerName(MainManager main)
        {
            if (!string.IsNullOrEmpty(speakerName))
            {
                return main.ResourceManager.GetCharacterName(speakerName);
            }
            else
            {
                return main.ResourceManager.GetCharacterName(speaker);
            }

        }
        private static TalkScript[] GetDefaultStartScripts() => Array.Empty<TalkScript>();
        private static TalkScript[] GetDefaultClickScripts() => new TalkScript[]
        {
            new TalkScript("next")
        };
    }
}
