#nullable enable // autogenerated

using System.Xml;
using MVZ2.IO;
using PVZEngine;

namespace MVZ2.TalkData
{
    public class TalkCharacter
    {
        public NamespaceID id;
        public NamespaceID? variant;
        public string side = string.Empty;

        public TalkCharacter(NamespaceID id, NamespaceID? variant, string side)
        {
            this.id = id;
            this.variant = variant;
            this.side = side;
        }

        public XmlNode ToXmlNode(XmlDocument document)
        {
            XmlNode node = document.CreateElement("character");
            if (NamespaceID.IsValid(id))
                node.CreateAttribute("id", id.ToString());
            if (NamespaceID.IsValid(variant))
                node.CreateAttribute("variant", variant.ToString());
            node.CreateAttribute("side", side);
            return node;
        }
        public static TalkCharacter? FromXmlNode(XmlNode node, string defaultNsp)
        {
            var id = node.GetAttributeNamespaceID("id", defaultNsp);
            if (!NamespaceID.IsValid(id))
            {
                Log.LogError($"The {nameof(id)} of a {nameof(TalkCharacter)} is invalid.");
                return null;
            }
            var variant = node.GetAttributeNamespaceID("variant", defaultNsp);
            var side = node.GetAttribute("side") ?? string.Empty;
            return new TalkCharacter(id, variant, side);
        }
    }
}
