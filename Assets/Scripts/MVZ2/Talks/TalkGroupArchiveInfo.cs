#nullable enable // autogenerated

using System.Xml;
using MVZ2.IO;
using MVZ2.Metas;
using MVZ2Logic;
using PVZEngine;

namespace MVZ2.TalkData
{
    public class TalkGroupArchiveInfo
    {
        public string name = string.Empty;
        public SpriteReference? background;
        public XMLConditionList? unlockConditions;
        public NamespaceID? music;
        public XmlNode ToXmlNode(XmlDocument document)
        {
            XmlNode node = document.CreateElement("archive");
            node.CreateAttribute("name", name);
            if (SpriteReference.IsValid(background))
                node.CreateAttribute("background", background.ToString());
            if (NamespaceID.IsValid(music))
                node.CreateAttribute("music", music.ToString());
            if (unlockConditions != null)
            {
                var unlockNode = unlockConditions.ToXmlNode("unlock", document);
                node.AppendChild(unlockNode);
            }
            return node;
        }
        public static TalkGroupArchiveInfo FromXmlNode(XmlNode node, string defaultNsp)
        {
            var name = node.GetAttribute("name") ?? string.Empty;
            var background = node.GetAttributeSpriteReference("background", defaultNsp);
            var music = node.GetAttributeNamespaceID("music", defaultNsp);

            XMLConditionList? unlockConditions = null;
            var unlockNode = node["unlock"];
            if (unlockNode != null)
            {
                unlockConditions = XMLConditionList.FromXmlNode(unlockNode, defaultNsp);
            }
            else
            {
                var unlock = node.GetAttributeNamespaceID("unlock", defaultNsp);
                if (NamespaceID.IsValid(unlock))
                {
                    unlockConditions = XMLConditionList.FromSingle(unlock);
                }
            }
            return new TalkGroupArchiveInfo()
            {
                name = name,
                background = background,
                unlockConditions = unlockConditions,
                music = music,
            };
        }
    }
}
