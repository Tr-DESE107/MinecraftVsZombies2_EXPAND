#nullable enable // autogenerated

using Tools;
using UnityEngine;

namespace MVZ2.Models
{
    public class SpeedlineSizeSetter : ModelComponent
    {
        public override void UpdateLogic()
        {
            base.UpdateLogic();

            var size = Model.GetProperty<Vector3>("Size");
            size = Lawn2TransScale(size);
            bool toLeft = size.x < 0;
            size = size.Abs();
            float volume = size.y * size.z;
            var particleSystem = player.Particles;

            var particleEmission = particleSystem.emission;
            var particleShape = particleSystem.shape;
            particleEmission.rateOverTimeMultiplier = particleCountPerVolume * volume + additionalParticleCount;
            particleShape.position = Vector3.up * (size.y * 0.5f);
            particleShape.rotation = new Vector3(0, toLeft ? -90 : 90);
            particleShape.scale = new Vector3(1, size.z + size.y, size.x);
        }
        [SerializeField]
        private ParticlePlayer player = null!;
        [SerializeField]
        private float particleCountPerVolume = 16;
        [SerializeField]
        private float additionalParticleCount = 0;
    }
}
