#nullable enable // autogenerated

using PVZEngine.Models;
using UnityEngine;
using UnityEngine.Rendering;

namespace MVZ2.Models
{
    [RequireComponent(typeof(Animator))]
    public class AnimatorElement : MonoBehaviour, IAnimatorInterface
    {
        public Animator Animator
        {
            get
            {
                if (!animator)
                {
                    animator = GetComponent<Animator>();
                }
                return animator;
            }
        }
        public void SetTrigger(string name)
        {
            Animator.SetTrigger(name);
        }

        public void SetBool(string name, bool value)
        {
            Animator.SetBool(name, value);
        }

        public void SetInt(string name, int value)
        {
            Animator.SetInteger(name, value);
        }

        public void SetFloat(string name, float value)
        {
            Animator.SetFloat(name, value);
        }

        public float GetLayerWeight(string name)
        {
            var index = Animator.GetLayerIndex(name);
            if (index < 0)
                return 0;
            return Animator.GetLayerWeight(index);
        }
        public void SetLayerWeight(string name, float value)
        {
            var index = Animator.GetLayerIndex(name);
            if (index < 0)
                return;
            Animator.SetLayerWeight(index, value);
        }
        public SerializableAnimator? ToSerializable()
        {
            if (Animator == null)
                return null;
            return new SerializableAnimator(Animator);
        }
        private Animator animator = null!;
        public string elementName;

    }
}
