#nullable enable // autogenerated

using System.Xml;
using MVZ2.IO;
using PVZEngine;

namespace MVZ2.Metas
{
    public class AlmanacMetaGroup
    {
        public NamespaceID id;
        public string name = string.Empty;
        public int order;
        public AlmanacMetaEntry[] entries;

        public AlmanacMetaGroup(NamespaceID id, AlmanacMetaEntry[] entries)
        {
            this.id = id;
            this.entries = entries;
        }

        public static AlmanacMetaGroup? FromXmlNode(XmlNode node, string defaultNsp)
        {
            var id = node.GetAttributeNamespaceID("id", defaultNsp);
            if (!NamespaceID.IsValid(id))
            {
                Log.LogError("The ID of an AlmanacMetaGroup is invalid.");
                return null;
            }
            var order = node.GetAttributeInt("order") ?? 0;
            var name = node.GetAttribute("name") ?? string.Empty;
            var entries = new AlmanacMetaEntry[node.ChildNodes.Count];
            int entryIndex = 0;
            for (int j = 0; j < entries.Length; j++)
            {
                var childNode = node.ChildNodes[j];
                switch (childNode.Name)
                {
                    case "entry":
                        var entry = AlmanacMetaEntry.FromXmlNode(childNode, defaultNsp);
                        if (entry != null)
                        {
                            if (!entry.hidden)
                            {
                                entry.index = entryIndex;
                                entryIndex++;
                            }
                            entries[j] = entry;
                        }
                        break;
                }
            }
            return new AlmanacMetaGroup(id, entries)
            {
                order = order,
                name = name
            };
        }
    }
}
