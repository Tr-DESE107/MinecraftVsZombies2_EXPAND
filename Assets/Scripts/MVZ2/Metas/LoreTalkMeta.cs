#nullable enable // autogenerated

using System.Collections.Generic;
using System.Xml;
using MVZ2.IO;
using MVZ2.Saves;
using MVZ2Logic.Games;
using PVZEngine;

namespace MVZ2.Metas
{
    public class LoreTalkMetaList
    {
        public LoreTalkMetaList(LoreTalkMeta[] talks)
        {
            Talks = talks;
        }

        public LoreTalkMeta[] Talks { get; set; }
        public static LoreTalkMetaList? FromXmlNode(XmlNode node, string defaultNsp)
        {
            if (node == null)
                return null;
            List<LoreTalkMeta> metas = new List<LoreTalkMeta>();
            for (int i = 0; i < node.ChildNodes.Count; i++)
            {
                var child = node.ChildNodes[i];
                if (child.Name == "talk")
                {
                    var meta = LoreTalkMeta.FromXmlNode(child, defaultNsp);
                    if (meta != null)
                        metas.Add(meta);
                }
            }
            return new LoreTalkMetaList(metas.ToArray());
        }
        public NamespaceID[] GetLoreTalks(IGlobalSaveData save)
        {
            List<NamespaceID> results = new List<NamespaceID>();
            foreach (var talk in Talks)
            {
                if (talk.Conditions != null && save.MeetsXMLConditions(talk.Conditions))
                {
                    results.Add(talk.ID);
                }
            }
            return results.ToArray();
        }
    }
    public class LoreTalkMeta
    {
        private LoreTalkMeta(NamespaceID iD)
        {
            ID = iD;
        }

        public NamespaceID ID { get; set; }
        public XMLConditionList? Conditions { get; set; }
        public static LoreTalkMeta? FromXmlNode(XmlNode node, string defaultNsp)
        {
            var id = node.GetAttributeNamespaceID("id", defaultNsp);
            if (!NamespaceID.IsValid(id))
            {
                Log.LogError($"The {nameof(id)} of a {nameof(LoreTalkMeta)} is invalid.");
                return null;
            }
            var conditions = XMLConditionList.FromXmlNode(node["conditions"], defaultNsp);
            return new LoreTalkMeta(id)
            {
                Conditions = conditions,
            };
        }
    }
}
