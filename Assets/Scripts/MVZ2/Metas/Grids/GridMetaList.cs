#nullable enable // autogenerated

using System.Collections.Generic;
using System.Xml;

namespace MVZ2.Metas
{
    public class GridMetaList
    {
        public GridMeta[] metas;
        public GridLayerMeta[] layers;
        public GridErrorMeta[] errors;

        public GridMetaList(GridMeta[] metas, GridLayerMeta[] layers, GridErrorMeta[] errors)
        {
            this.metas = metas;
            this.layers = layers;
            this.errors = errors;
        }

        public static GridMetaList FromXmlNode(XmlNode node, string defaultNsp)
        {
            var layersNode = node["layers"];
            var layers = new List<GridLayerMeta>();
            if (layersNode != null)
            {
                for (int i = 0; i < layersNode.ChildNodes.Count; i++)
                {
                    var child = layersNode.ChildNodes[i];
                    if (child.Name == "layer")
                    {
                        var meta = GridLayerMeta.FromXmlNode(child, defaultNsp);
                        if (meta != null)
                            layers.Add(meta);
                    }
                }
            }
            var errorsNode = node["errors"];
            var errors = new List<GridErrorMeta>();
            if (errorsNode != null)
            {
                for (int i = 0; i < errorsNode.ChildNodes.Count; i++)
                {
                    var child = errorsNode.ChildNodes[i];
                    if (child.Name == "error")
                    {
                        var meta = GridErrorMeta.FromXmlNode(child, defaultNsp);
                        if (meta != null)
                            errors.Add(meta);
                    }
                }
            }
            var grids = new List<GridMeta>();
            for (int i = 0; i < node.ChildNodes.Count; i++)
            {
                var child = node.ChildNodes[i];
                if (child.Name == "grid")
                {
                    var meta = GridMeta.FromXmlNode(child, defaultNsp);
                    if (meta != null)
                        grids.Add(meta);
                }
            }
            return new GridMetaList(grids.ToArray(), layers.ToArray(), errors.ToArray());
        }
    }
}
