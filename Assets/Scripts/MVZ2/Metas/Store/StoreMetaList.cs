#nullable enable // autogenerated

using System.Collections.Generic;
using System.Xml;

namespace MVZ2.Metas
{
    public class StoreMetaList
    {
        private StoreMetaList(StorePresetMeta[] presets, StoreChatGroupMeta[] chats, ProductMeta[] products)
        {
            Presets = presets;
            Chats = chats;
            Products = products;
        }

        public StorePresetMeta[] Presets { get; private set; }
        public LoreTalkMetaList? LoreTalks { get; private set; }
        public StoreChatGroupMeta[] Chats { get; private set; }
        public ProductMeta[] Products { get; private set; }
        public static StoreMetaList FromXmlNode(XmlNode node, string defaultNsp)
        {
            var presetsNode = node["presets"];
            var presets = new List<StorePresetMeta>();
            if (presetsNode != null)
            {
                for (var i = 0; i < presetsNode.ChildNodes.Count; i++)
                {
                    var child = presetsNode.ChildNodes[i];
                    if (child.Name == "preset")
                    {
                        var meta = StorePresetMeta.FromXmlNode(child, defaultNsp);
                        if (meta != null)
                            presets.Add(meta);
                    }
                }
            }
            var talksNode = node["talks"];
            LoreTalkMetaList? loreTalks = null;
            if (talksNode != null)
            {
                loreTalks = LoreTalkMetaList.FromXmlNode(node["talks"], defaultNsp);
            }

            var chatsNode = node["chats"];
            var chats = new List<StoreChatGroupMeta>();
            if (chatsNode != null)
            {
                for (var i = 0; i < chatsNode.ChildNodes.Count; i++)
                {
                    var child = chatsNode.ChildNodes[i];
                    if (child.Name == "group")
                    {
                        var meta = StoreChatGroupMeta.FromXmlNode(child, defaultNsp);
                        if (meta != null)
                            chats.Add(meta);
                    }
                }
            }
            var productsNode = node["products"];
            var products = new List<ProductMeta>();
            if (productsNode != null)
            {
                for (var i = 0; i < productsNode.ChildNodes.Count; i++)
                {
                    var child = productsNode.ChildNodes[i];
                    if (child.Name == "product")
                    {
                        var meta = ProductMeta.FromXmlNode(child, defaultNsp, i);
                        if (meta != null)
                            products.Add(meta);
                    }
                }
            }
            return new StoreMetaList(presets.ToArray(), chats.ToArray(), products.ToArray())
            {
                LoreTalks = loreTalks
            };
        }
    }
}
