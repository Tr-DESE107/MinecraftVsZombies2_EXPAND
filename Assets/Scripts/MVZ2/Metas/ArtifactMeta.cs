#nullable enable // autogenerated

using System;
using System.Xml;
using MVZ2.IO;
using MVZ2Logic;
using PVZEngine;

namespace MVZ2.Metas
{
    public class ArtifactMeta
    {

        public string ID { get; private set; }
        public string Name { get; private set; } = string.Empty;
        public string Tooltip { get; private set; } = string.Empty;
        [Obsolete]
        public NamespaceID? Unlock { get; private set; }
        public XMLConditionList? UnlockConditions { get; private set; }
        public SpriteReference? Sprite { get; private set; }
        public int Order { get; private set; }
        public ArtifactMeta(string id)
        {
            ID = id;
        }
        public static ArtifactMeta? FromXmlNode(XmlNode node, string defaultNsp, int order)
        {
            var id = node.GetAttribute("id");
            if (string.IsNullOrEmpty(id))
            {
                Log.LogError("The ID of an ArtifactMeta is invalid.");
                return null;
            }
            var name = node.GetAttribute("name") ?? string.Empty;
            var tooltip = node.GetAttribute("tooltip") ?? string.Empty;
            var conditions = node.GetUnlockConditionsOrObsolete("unlock", "unlock", defaultNsp);
            var sprite = node.GetAttributeSpriteReference("sprite", defaultNsp);
            return new ArtifactMeta(id)
            {
                Name = name,
                Tooltip = tooltip,
                UnlockConditions = conditions,
                Order = order,
                Sprite = sprite,
            };
        }
    }
}
