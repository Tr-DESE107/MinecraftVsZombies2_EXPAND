#nullable enable // autogenerated

using System;
using System.Linq;
using MVZ2.Metas;
using MVZ2.Modding;
using MVZ2Logic.Games;
using PVZEngine;
using UnityEngine;

namespace MVZ2.Managers
{
    public partial class ResourceManager : MonoBehaviour
    {
        #region 元数据列表
        public EntityMetaList? GetEntityMetaList(string nsp)
        {
            var modResource = main.ResourceManager.GetModResource(nsp);
            if (modResource == null)
                return null;
            return modResource.EntityMetaList;
        }
        public EntityMeta[] GetModEntityMetas(string nsp)
        {
            var metaList = GetEntityMetaList(nsp);
            if (metaList == null)
                return Array.Empty<EntityMeta>();
            return metaList.metas.ToArray();
        }
        #endregion

        #region 元数据
        public string GetEntityDeathMessage(NamespaceID entityID)
        {
            return Main.Game.GetEntityDeathMessage(entityID);
        }
        public string GetEntityName(NamespaceID entityID)
        {
            return Main.Game.GetEntityName(entityID);
        }
        public string GetEntityTooltip(NamespaceID entityID)
        {
            return Main.Game.GetEntityTooltip(entityID);
        }
        #endregion

        #region 实体对策
        public EntityCounterMeta[] GetModEntityCounterMetas(string nsp)
        {
            var modResource = GetModResource(nsp);
            if (modResource?.EntityMetaList == null)
                return Array.Empty<EntityCounterMeta>();
            return modResource.EntityMetaList.counters;
        }
        #endregion
        private void LoadUnlocks_Entities(ModResource resource)
        {
            if (resource.EntityMetaList == null)
                return;
            foreach (var meta in resource.EntityMetaList.metas)
            {
                AddConditionListUnlocks(meta.Unlock);
            }
        }
    }
}
