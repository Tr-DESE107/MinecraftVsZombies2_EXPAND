#nullable enable // autogenerated

using System.Collections.Generic;
using System.Linq;
using MVZ2.Metas;
using MVZ2.Modding;
using PVZEngine;
using UnityEngine;

namespace MVZ2.Managers
{
    public partial class ResourceManager : MonoBehaviour
    {
        public NamespaceID[] GetAllUnlockConditions()
        {
            return unlockConditionList.ToArray();
        }
        private void LoadModResourceUnlocks(ModResource resource)
        {
            LoadUnlocks_Achievements(resource);
            LoadUnlocks_Almanac(resource);
            LoadUnlocks_Arcade(resource);
            LoadUnlocks_Artifacts(resource);
            LoadUnlocks_Characters(resource);
            LoadUnlocks_Entities(resource);
            LoadUnlocks_MainmenuView(resource);
            LoadUnlocks_Music(resource);
            LoadUnlocks_Stages(resource);
            LoadUnlocks_Store(resource);
            LoadUnlocks_Talks(resource);
        }
        private void AddConditionListUnlocks(XMLConditionList? conditions)
        {
            if (conditions == null)
                return;
            foreach (var condition in conditions.Conditions)
            {
                AddConditionUnlocks(condition);
            }
        }
        private void AddConditionUnlocks(XMLCondition condition)
        {
            AddUnlocks(condition.Required);
            AddUnlocks(condition.RequiredNot);
        }
        private void AddUnlocks(NamespaceID?[]? unlocks)
        {
            if (unlocks == null)
                return;
            foreach (var unlock in unlocks)
            {
                AddUnlock(unlock);
            }
        }
        private void AddUnlock(NamespaceID? unlock)
        {
            if (unlock == null)
                return;
            unlockConditionList.Add(unlock);
        }
        private HashSet<NamespaceID> unlockConditionList = new HashSet<NamespaceID>();
    }
}
