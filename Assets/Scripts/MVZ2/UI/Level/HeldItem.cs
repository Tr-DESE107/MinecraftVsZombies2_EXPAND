#nullable enable // autogenerated

using MVZ2.Models;
using UnityEngine;

namespace MVZ2.Level.UI
{
    public class HeldItem : MonoBehaviour
    {
        public void UpdateModelFixed()
        {
            if (model.Exists())
            {
                model.UpdateFixed();
            }
        }
        public void UpdateModelFrame(float deltaTime)
        {
            if (model.Exists())
            {
                model.UpdateFrame(deltaTime);
            }
        }
        public void SetModelSimulationSpeed(float speed)
        {
            if (model.Exists())
            {
                model.SetSimulationSpeed(speed);
            }
        }
        public void SetModel(ModelBuilder viewData)
        {
            if (model.Exists())
            {
                Destroy(model.gameObject);
                model = null;
            }
            model = viewData.Build(modelRoot);
        }
        public Model? GetModel()
        {
            return model;
        }
        public void SetTrigger(bool visible, bool trigger)
        {
            triggerObj.SetActive(visible && trigger);
            notTriggerObj.SetActive(visible && !trigger);
        }
        public void SetImbued(bool value)
        {
            imbuedObj.SetActive(value);
        }
        [SerializeField]
        private Transform modelRoot = null!;
        [SerializeField]
        private GameObject triggerObj = null!;
        [SerializeField]
        private GameObject notTriggerObj = null!;
        [SerializeField]
        private GameObject imbuedObj = null!;
        private Model? model;
    }
}
